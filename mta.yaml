_schema-version: "3.1"
ID: InStoreOrderCreationApp
description: In-Store Order Creation App
version: 1.0.0
modules:
  - name: InStoreOrderCreationApp
    type: approuter.nodejs
    path: app/router
    parameters:
      keep-existing-routes: true
      disk-quota: 512M
      memory: 512M
      routes:
        - route: instoreordercreationapp.cfapps.eu10-004.hana.ondemand.com
    requires:
      - name: InStoreOrderCreationApp-auth
      - name: InStoreOrderCreationApp-destination
      - name: api-backend-app
    provides:
      - name: app-api
        properties:
          app-protocol: ${protocol}
          app-uri: ${default-uri}
    properties:
      destinations: |
        [
          {
            "name": "api-backend",
            "url": "~{api-backend-app/url}",
            "forwardAuthToken": true
          }
        ]
  - name: api-backend
    type: nodejs
    path: app/order-app/src/api
    parameters:
      memory: 512M
      disk-quota: 512M
      env:
        # Default Store Configuration
        DEFAULT_STORE_ID: STORE001
        
        # OPPS (Price and Promotion Service) Configuration
        OPPS_CLIENT_ID: sb-4774874b-da35-4dd9-8b59-8ecd7d0a17ef!b59628|ppservice-cf-OPPS_oppsprodeu20-prod!b5785
        OPPS_CLIENT_SECRET: df37408a-5cdb-4b58-a145-d27a8797ba10$bPZjkBtg6NWOmIrCpmUAx34elbb3saNwdsZW8OiWKhk=
        OPPS_TOKEN_URL: https://rbos-showcase-zzai01ti.authentication.eu20.hana.ondemand.com/oauth/token
        OPPS_BASE_URL: https://data-access.api.eu20.opps.cloud.sap/odata/v4/OPPS
        
        # OMSA (Sourcing and Availability Service) Configuration
        OMSA_CLIENT_ID: ((omsa-client-id))
        OMSA_CLIENT_SECRET: ((omsa-client-secret))
        OMSA_TOKEN_URL: ((omsa-token-url))
        OMSA_BASE_URL: ((omsa-base-url))
        
        # OMF (Order Management and Fulfillment Service) Configuration
        OMF_CLIENT_ID: ((omf-client-id))
        OMF_CLIENT_SECRET: ((omf-client-secret))
        OMF_TOKEN_URL: ((omf-token-url))
        OMF_BASE_URL: ((omf-base-url))
        
        # Application Settings
        NODE_ENV: production
        LOG_LEVEL: info
    requires:
      - name: InStoreOrderCreationApp-auth
      - name: InStoreOrderCreationApp-destination
    provides:
      - name: api-backend-app
        properties:
          url: ${default-url}



resources:
  - name: InStoreOrderCreationApp-auth
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      service-plan: application
      path: ./xs-security.json
      config:
        xsappname: InStoreOrderCreationApp-${space}
        tenant-mode: dedicated
  - name: InStoreOrderCreationApp-destination
    type: org.cloudfoundry.managed-service
    parameters:
      service: destination
      service-plan: lite
